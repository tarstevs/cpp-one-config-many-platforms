name: build-linux

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build-application-linux"
  build-application-linux:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps are the individual actions/tasks that will be executed for each job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # Usually this is always needed
      - uses: actions/checkout@v2

      # After all of the above, we are on Ubuntu in the root directory of our cpp-one-config-many-platforms project.
      # The repo has been cloned, but nothing more has been done. So our first task now will be to pull
      # data for the vcpkg submodule which is empty after a normal git clone.
      - name: Load-vcpkg
        run: |
          git submodule init
          git submodule update
      - name: Install Ninja
        run: |
          sudo apt-get -y install ninja-build
      # We are using the vcpkg manifest mode, and since `CMAKE_TOOLCHAIN_FILE` (holding the path to vcpkg.cmake)
      # is set in CMakePresets.txt, we can execute the command line cmake build without passing an argument telling
      # CMAKE where to find vcpkg.cmake.
      - name: Build-Application
        run: |
          cmake --preset=linux-debug
          cmake --build --preset=build-linux-debug
